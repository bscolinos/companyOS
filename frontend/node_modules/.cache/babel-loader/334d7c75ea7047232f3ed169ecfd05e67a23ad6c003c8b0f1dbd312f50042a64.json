{"ast":null,"code":"import { apiService } from './api';\nclass AuthService {\n  async login(email, password) {\n    const response = await apiService.login(email, password);\n\n    // Store token for future requests\n    if (response.access_token) {\n      localStorage.setItem('auth_token', response.access_token);\n    }\n    return {\n      user: response.user,\n      token: response.access_token,\n      access_token: response.access_token,\n      token_type: response.token_type\n    };\n  }\n  async register(userData) {\n    return await apiService.register(userData);\n  }\n  async getCurrentUser() {\n    return await apiService.getCurrentUser();\n  }\n  logout() {\n    localStorage.removeItem('auth_token');\n  }\n  getToken() {\n    return localStorage.getItem('auth_token');\n  }\n  isAuthenticated() {\n    return !!this.getToken();\n  }\n}\nexport const authService = new AuthService();","map":{"version":3,"names":["apiService","AuthService","login","email","password","response","access_token","localStorage","setItem","user","token","token_type","register","userData","getCurrentUser","logout","removeItem","getToken","getItem","isAuthenticated","authService"],"sources":["/Users/billscolinos/Documents/companyOS/frontend/src/services/authService.ts"],"sourcesContent":["import { apiService } from './api';\r\nimport { User, LoginResponse, RegisterData } from '../types';\r\n\r\nclass AuthService {\r\n  async login(email: string, password: string): Promise<LoginResponse> {\r\n    const response = await apiService.login(email, password);\r\n    \r\n    // Store token for future requests\r\n    if (response.access_token) {\r\n      localStorage.setItem('auth_token', response.access_token);\r\n    }\r\n    \r\n    return {\r\n      user: response.user,\r\n      token: response.access_token,\r\n      access_token: response.access_token,\r\n      token_type: response.token_type\r\n    };\r\n  }\r\n\r\n  async register(userData: RegisterData): Promise<User> {\r\n    return await apiService.register(userData);\r\n  }\r\n\r\n  async getCurrentUser(): Promise<User> {\r\n    return await apiService.getCurrentUser();\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('auth_token');\r\n  }\r\n\r\n  getToken(): string | null {\r\n    return localStorage.getItem('auth_token');\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.getToken();\r\n  }\r\n}\r\n\r\nexport const authService = new AuthService();\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAGlC,MAAMC,WAAW,CAAC;EAChB,MAAMC,KAAKA,CAACC,KAAa,EAAEC,QAAgB,EAA0B;IACnE,MAAMC,QAAQ,GAAG,MAAML,UAAU,CAACE,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC;;IAExD;IACA,IAAIC,QAAQ,CAACC,YAAY,EAAE;MACzBC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEH,QAAQ,CAACC,YAAY,CAAC;IAC3D;IAEA,OAAO;MACLG,IAAI,EAAEJ,QAAQ,CAACI,IAAI;MACnBC,KAAK,EAAEL,QAAQ,CAACC,YAAY;MAC5BA,YAAY,EAAED,QAAQ,CAACC,YAAY;MACnCK,UAAU,EAAEN,QAAQ,CAACM;IACvB,CAAC;EACH;EAEA,MAAMC,QAAQA,CAACC,QAAsB,EAAiB;IACpD,OAAO,MAAMb,UAAU,CAACY,QAAQ,CAACC,QAAQ,CAAC;EAC5C;EAEA,MAAMC,cAAcA,CAAA,EAAkB;IACpC,OAAO,MAAMd,UAAU,CAACc,cAAc,CAAC,CAAC;EAC1C;EAEAC,MAAMA,CAAA,EAAS;IACbR,YAAY,CAACS,UAAU,CAAC,YAAY,CAAC;EACvC;EAEAC,QAAQA,CAAA,EAAkB;IACxB,OAAOV,YAAY,CAACW,OAAO,CAAC,YAAY,CAAC;EAC3C;EAEAC,eAAeA,CAAA,EAAY;IACzB,OAAO,CAAC,CAAC,IAAI,CAACF,QAAQ,CAAC,CAAC;EAC1B;AACF;AAEA,OAAO,MAAMG,WAAW,GAAG,IAAInB,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}