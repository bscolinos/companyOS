{"ast":null,"code":"import _objectSpread from\"/Users/billscolinos/Documents/companyOS/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{ComputerDesktopIcon,ExclamationTriangleIcon,CheckCircleIcon,ClockIcon,ArrowPathIcon,ChartBarIcon,CpuChipIcon,CircleStackIcon,ShieldCheckIcon,XCircleIcon,BoltIcon,EyeIcon,SparklesIcon,CurrencyDollarIcon,ShoppingCartIcon,ChatBubbleLeftRightIcon,ArrowTrendingUpIcon}from'@heroicons/react/24/outline';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminMonitoringDashboard=()=>{// Initialize with pre-populated data to simulate ongoing monitoring\nconst[executions,setExecutions]=useState(()=>{const agentNames=['InventoryAgent','PricingAgent','CustomerServiceAgent','RecommendationAgent','DataAnalysisAgent','MarketingAgent','FinancialAnalystAgent','SEOAgent','SupplyChainAgent'];const operations=['Analyzing inventory levels','Processing customer data','Optimizing pricing strategy','Generating recommendations','Updating product catalog','Processing orders','Analyzing market trends','Optimizing supply chain','Managing customer queries','Forecasting demand','Calculating ROI','SEO optimization'];const initialExecutions=[];const now=new Date();// Generate some running executions (5-8)\nfor(let i=0;i<5+Math.floor(Math.random()*4);i++){const agent=agentNames[Math.floor(Math.random()*agentNames.length)];const operation=operations[Math.floor(Math.random()*operations.length)];const startTime=new Date(now.getTime()-Math.random()*300000);// Started up to 5 minutes ago\nconst duration=(now.getTime()-startTime.getTime())/1000;initialExecutions.push({id:\"exec-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9),\"-\").concat(i),agentName:agent,operation,status:'running',startTime,duration,dataProcessed:Math.floor(Math.random()*50000)+10000});}// Generate some completed executions (15-20)\nfor(let i=0;i<15+Math.floor(Math.random()*6);i++){const agent=agentNames[Math.floor(Math.random()*agentNames.length)];const operation=operations[Math.floor(Math.random()*operations.length)];const completedTime=new Date(now.getTime()-Math.random()*1800000);// Completed up to 30 minutes ago\nconst duration=3+Math.random()*5;initialExecutions.push({id:\"exec-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9),\"-comp-\").concat(i),agentName:agent,operation,status:'completed',startTime:new Date(completedTime.getTime()-duration*1000),duration,dataProcessed:Math.floor(Math.random()*50000)+10000});}// Generate some stopped executions (2-4)\nfor(let i=0;i<2+Math.floor(Math.random()*3);i++){const agent=agentNames[Math.floor(Math.random()*agentNames.length)];const operation=operations[Math.floor(Math.random()*operations.length)];const stoppedTime=new Date(now.getTime()-Math.random()*900000);// Stopped up to 15 minutes ago\nconst duration=1+Math.random()*3;initialExecutions.push({id:\"exec-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9),\"-stop-\").concat(i),agentName:agent,operation,status:'stopped',startTime:new Date(stoppedTime.getTime()-duration*1000),duration,dataProcessed:Math.floor(Math.random()*30000)+5000});}// Sort by most recent first\nreturn initialExecutions.sort((a,b)=>b.startTime.getTime()-a.startTime.getTime());});const[dataOps,setDataOps]=useState(()=>{const agentNames=['InventoryAgent','PricingAgent','CustomerServiceAgent','RecommendationAgent','DataAnalysisAgent','MarketingAgent','FinancialAnalystAgent','SEOAgent','SupplyChainAgent'];const tables=['products','orders','customers','inventory','analytics','pricing','recommendations'];const operationsArray=['INSERT','SELECT','UPDATE','DELETE'];const initialDataOps=[];const now=new Date();// Generate 40-60 initial data operations\nfor(let i=0;i<40+Math.floor(Math.random()*21);i++){const agent=agentNames[Math.floor(Math.random()*agentNames.length)];const table=tables[Math.floor(Math.random()*tables.length)];const operation=operationsArray[Math.floor(Math.random()*operationsArray.length)];const timestamp=new Date(now.getTime()-Math.random()*1800000);// Up to 30 minutes ago\ninitialDataOps.push({id:\"data-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9),\"-\").concat(i),table,operation,recordsAffected:Math.floor(Math.random()*25000)+5000,timestamp,agent});}// Sort by most recent first\nreturn initialDataOps.sort((a,b)=>b.timestamp.getTime()-a.timestamp.getTime());});const[alerts,setAlerts]=useState(()=>{const agentNames=['InventoryAgent','PricingAgent','CustomerServiceAgent','RecommendationAgent','DataAnalysisAgent','MarketingAgent','FinancialAnalystAgent','SEOAgent','SupplyChainAgent'];const reasons=['High CPU usage detected','Memory threshold exceeded','Unusual data access pattern','Rate limit approaching','Anomalous behavior detected','Security policy violation'];const severities=['low','medium','high'];const initialAlerts=[];const now=new Date();// Generate 3-7 initial alerts\nfor(let i=0;i<3+Math.floor(Math.random()*5);i++){const agent=agentNames[Math.floor(Math.random()*agentNames.length)];const reason=reasons[Math.floor(Math.random()*reasons.length)];const severity=severities[Math.floor(Math.random()*severities.length)];const timestamp=new Date(now.getTime()-Math.random()*900000);// Up to 15 minutes ago\ninitialAlerts.push({id:\"alert-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9),\"-\").concat(i),agentName:agent,reason,timestamp,severity});}// Sort by most recent first\nreturn initialAlerts.sort((a,b)=>b.timestamp.getTime()-a.timestamp.getTime());});const agentIcons={'InventoryAgent':ShoppingCartIcon,'PricingAgent':CurrencyDollarIcon,'CustomerServiceAgent':ChatBubbleLeftRightIcon,'RecommendationAgent':SparklesIcon,'DataAnalysisAgent':ChartBarIcon,'MarketingAgent':BoltIcon,'FinancialAnalystAgent':CurrencyDollarIcon,'SEOAgent':EyeIcon,'SupplyChainAgent':ArrowTrendingUpIcon};const generateAlert=agentName=>{const reasons=['High CPU usage detected','Memory threshold exceeded','Unusual data access pattern','Rate limit approaching','Anomalous behavior detected','Security policy violation'];const severities=['low','medium','high'];return{id:\"alert-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9)),agentName,reason:reasons[Math.floor(Math.random()*reasons.length)],timestamp:new Date(),severity:severities[Math.floor(Math.random()*severities.length)]};};useEffect(()=>{const agentNames=['InventoryAgent','PricingAgent','CustomerServiceAgent','RecommendationAgent','DataAnalysisAgent','MarketingAgent','FinancialAnalystAgent','SEOAgent','SupplyChainAgent'];const operations=['Analyzing inventory levels','Processing customer data','Optimizing pricing strategy','Generating recommendations','Updating product catalog','Processing orders','Analyzing market trends','Optimizing supply chain','Managing customer queries','Forecasting demand','Calculating ROI','SEO optimization'];const tables=['products','orders','customers','inventory','analytics','pricing','recommendations'];const generateExecution=()=>{const agent=agentNames[Math.floor(Math.random()*agentNames.length)];const operation=operations[Math.floor(Math.random()*operations.length)];return{id:\"exec-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9)),agentName:agent,operation,status:'running',startTime:new Date(),duration:0,dataProcessed:Math.floor(Math.random()*50000)+10000// 10K-60K records\n};};const generateDataOperation=agent=>{const operationsArray=['INSERT','SELECT','UPDATE','DELETE'];const table=tables[Math.floor(Math.random()*tables.length)];const operation=operationsArray[Math.floor(Math.random()*operationsArray.length)];return{id:\"data-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9)),table,operation,recordsAffected:Math.floor(Math.random()*25000)+5000,// 5K-30K records\ntimestamp:new Date(),agent};};const interval=setInterval(()=>{// Add new executions much more frequently (every 300ms)\nif(Math.random()<0.8){const newExecution=generateExecution();setExecutions(prev=>[newExecution,...prev.slice(0,49)]);// Keep last 50\n}// Update existing executions\nsetExecutions(prev=>prev.map(exec=>{if(exec.status==='running'){// Calculate actual duration for pre-existing executions\nconst currentTime=new Date();const actualDuration=(currentTime.getTime()-exec.startTime.getTime())/1000;const newDuration=actualDuration;// 8% chance of being stopped by monitoring (more frequent)\nif(Math.random()<0.08){const alert=generateAlert(exec.agentName);setAlerts(prevAlerts=>[alert,...prevAlerts.slice(0,14)]);// Keep last 15\nreturn _objectSpread(_objectSpread({},exec),{},{status:'stopped',duration:newDuration});}// Complete after 3-8 seconds (much faster)\nif(newDuration>3+Math.random()*5){// Generate more data operations when completing\nconst numOps=Math.floor(Math.random()*8)+3;// 3-10 operations\nfor(let i=0;i<numOps;i++){setTimeout(()=>{const dataOp=generateDataOperation(exec.agentName);setDataOps(prev=>[dataOp,...prev.slice(0,99)]);// Keep last 100\n},i*50);// Faster generation\n}return _objectSpread(_objectSpread({},exec),{},{status:'completed',duration:newDuration});}return _objectSpread(_objectSpread({},exec),{},{duration:newDuration});}return exec;}));},300);// Much faster updates (300ms instead of 1000ms)\nreturn()=>clearInterval(interval);},[]);const runningExecutions=executions.filter(e=>e.status==='running');const completedExecutions=executions.filter(e=>e.status==='completed');const stoppedExecutions=executions.filter(e=>e.status==='stopped');const recentDataOps=dataOps.slice(0,10);const recentAlerts=alerts.slice(0,5);return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-between\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 mb-4\",children:[/*#__PURE__*/_jsx(ComputerDesktopIcon,{className:\"h-8 w-8 text-primary-600\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-900\",children:\"Agent Monitoring Dashboard\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Real-time monitoring of AI agent executions and system operations\"})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-600\",children:\"Running\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold text-green-600\",children:runningExecutions.length})]}),/*#__PURE__*/_jsx(ArrowPathIcon,{className:\"h-8 w-8 text-green-600 animate-spin\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-600\",children:\"Completed\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold text-blue-600\",children:completedExecutions.length})]}),/*#__PURE__*/_jsx(CheckCircleIcon,{className:\"h-8 w-8 text-blue-600\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-600\",children:\"Stopped\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold text-red-600\",children:stoppedExecutions.length})]}),/*#__PURE__*/_jsx(XCircleIcon,{className:\"h-8 w-8 text-red-600\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-600\",children:\"Data Ops\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold text-purple-600\",children:dataOps.length})]}),/*#__PURE__*/_jsx(CircleStackIcon,{className:\"h-8 w-8 text-purple-600\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Active Executions\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-500\",children:\"Live\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3 max-h-96 overflow-y-auto\",children:runningExecutions.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 text-center py-8\",children:\"No active executions\"}):runningExecutions.map(exec=>{const IconComponent=agentIcons[exec.agentName]||CpuChipIcon;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-3 bg-green-50 rounded-lg border border-green-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(IconComponent,{className:\"h-5 w-5 text-green-600\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-medium text-gray-900\",children:exec.agentName}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:exec.operation})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(ArrowPathIcon,{className:\"h-4 w-4 text-green-600 animate-spin\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium text-green-600\",children:[exec.duration.toFixed(1),\"s\"]})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500\",children:[exec.dataProcessed.toLocaleString(),\" records\"]})]})]},exec.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Database Operations\"}),/*#__PURE__*/_jsx(CircleStackIcon,{className:\"h-5 w-5 text-gray-400\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2 max-h-96 overflow-y-auto\",children:recentDataOps.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 text-center py-8\",children:\"No recent operations\"}):recentDataOps.map(op=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-2 hover:bg-gray-50 rounded\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-2 py-1 rounded text-xs font-medium \".concat(op.operation==='INSERT'?'bg-green-100 text-green-800':op.operation==='SELECT'?'bg-blue-100 text-blue-800':op.operation==='UPDATE'?'bg-yellow-100 text-yellow-800':'bg-red-100 text-red-800'),children:op.operation}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:op.table}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500\",children:[\"by \",op.agent]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium\",children:op.recordsAffected.toLocaleString()}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:op.timestamp.toLocaleTimeString()})]})]},op.id))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-8 mt-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Monitoring Alerts\"}),/*#__PURE__*/_jsx(ShieldCheckIcon,{className:\"h-5 w-5 text-gray-400\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3 max-h-96 overflow-y-auto\",children:recentAlerts.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(CheckCircleIcon,{className:\"h-12 w-12 text-green-400 mx-auto mb-2\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-green-600 font-medium\",children:\"All systems operating normally\"})]}):recentAlerts.map(alert=>/*#__PURE__*/_jsx(\"div\",{className:\"p-3 rounded-lg border-l-4 \".concat(alert.severity==='high'?'bg-red-50 border-red-400':alert.severity==='medium'?'bg-yellow-50 border-yellow-400':'bg-blue-50 border-blue-400'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(ExclamationTriangleIcon,{className:\"h-4 w-4 \".concat(alert.severity==='high'?'text-red-600':alert.severity==='medium'?'text-yellow-600':'text-blue-600')}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-900\",children:alert.agentName}),/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 rounded-full text-xs font-medium \".concat(alert.severity==='high'?'bg-red-100 text-red-800':alert.severity==='medium'?'bg-yellow-100 text-yellow-800':'bg-blue-100 text-blue-800'),children:alert.severity.toUpperCase()})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mt-1\",children:alert.reason})]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500\",children:alert.timestamp.toLocaleTimeString()})]})},alert.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"Recent Executions\"}),/*#__PURE__*/_jsx(ClockIcon,{className:\"h-5 w-5 text-gray-400\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2 max-h-96 overflow-y-auto\",children:executions.slice(0,10).map(exec=>{const IconComponent=agentIcons[exec.agentName]||CpuChipIcon;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-2 hover:bg-gray-50 rounded\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(IconComponent,{className:\"h-4 w-4 text-gray-400\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium\",children:exec.agentName}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:exec.operation})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-right\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[exec.status==='running'&&/*#__PURE__*/_jsx(ArrowPathIcon,{className:\"h-3 w-3 text-green-600 animate-spin\"}),exec.status==='completed'&&/*#__PURE__*/_jsx(CheckCircleIcon,{className:\"h-3 w-3 text-green-600\"}),exec.status==='stopped'&&/*#__PURE__*/_jsx(XCircleIcon,{className:\"h-3 w-3 text-red-600\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-medium \".concat(exec.status==='running'?'text-green-600':exec.status==='completed'?'text-blue-600':'text-red-600'),children:exec.status})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500\",children:[exec.duration.toFixed(1),\"s\"]})]})]},exec.id);})})]})]})]});};export default AdminMonitoringDashboard;","map":{"version":3,"names":["React","useState","useEffect","ComputerDesktopIcon","ExclamationTriangleIcon","CheckCircleIcon","ClockIcon","ArrowPathIcon","ChartBarIcon","CpuChipIcon","CircleStackIcon","ShieldCheckIcon","XCircleIcon","BoltIcon","EyeIcon","SparklesIcon","CurrencyDollarIcon","ShoppingCartIcon","ChatBubbleLeftRightIcon","ArrowTrendingUpIcon","jsx","_jsx","jsxs","_jsxs","AdminMonitoringDashboard","executions","setExecutions","agentNames","operations","initialExecutions","now","Date","i","Math","floor","random","agent","length","operation","startTime","getTime","duration","push","id","concat","toString","substr","agentName","status","dataProcessed","completedTime","stoppedTime","sort","a","b","dataOps","setDataOps","tables","operationsArray","initialDataOps","table","timestamp","recordsAffected","alerts","setAlerts","reasons","severities","initialAlerts","reason","severity","agentIcons","generateAlert","generateExecution","generateDataOperation","interval","setInterval","newExecution","prev","slice","map","exec","currentTime","actualDuration","newDuration","alert","prevAlerts","_objectSpread","numOps","setTimeout","dataOp","clearInterval","runningExecutions","filter","e","completedExecutions","stoppedExecutions","recentDataOps","recentAlerts","className","children","IconComponent","toFixed","toLocaleString","op","toLocaleTimeString","toUpperCase"],"sources":["/Users/billscolinos/Documents/companyOS/frontend/src/pages/admin/AdminMonitoringDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  ComputerDesktopIcon,\n  ExclamationTriangleIcon,\n  CheckCircleIcon,\n  ClockIcon,\n  ArrowPathIcon,\n  ChartBarIcon,\n  CpuChipIcon,\n  CircleStackIcon,\n  ShieldCheckIcon,\n  XCircleIcon,\n  BoltIcon,\n  EyeIcon,\n  SparklesIcon,\n  CurrencyDollarIcon,\n  ShoppingCartIcon,\n  ChatBubbleLeftRightIcon,\n  ArrowTrendingUpIcon\n} from '@heroicons/react/24/outline';\n\ninterface AgentExecution {\n  id: string;\n  agentName: string;\n  operation: string;\n  status: 'running' | 'completed' | 'stopped' | 'failed';\n  startTime: Date;\n  duration: number;\n  dataProcessed: number;\n}\n\ninterface DataOperation {\n  id: string;\n  table: string;\n  operation: 'INSERT' | 'SELECT' | 'UPDATE' | 'DELETE';\n  recordsAffected: number;\n  timestamp: Date;\n  agent: string;\n}\n\ninterface MonitoringAlert {\n  id: string;\n  agentName: string;\n  reason: string;\n  timestamp: Date;\n  severity: 'low' | 'medium' | 'high';\n}\n\nconst AdminMonitoringDashboard: React.FC = () => {\n  // Initialize with pre-populated data to simulate ongoing monitoring\n  const [executions, setExecutions] = useState<AgentExecution[]>(() => {\n    const agentNames = [\n      'InventoryAgent', 'PricingAgent', 'CustomerServiceAgent', 'RecommendationAgent',\n      'DataAnalysisAgent', 'MarketingAgent', 'FinancialAnalystAgent', 'SEOAgent', 'SupplyChainAgent'\n    ];\n\n    const operations = [\n      'Analyzing inventory levels', 'Processing customer data', 'Optimizing pricing strategy',\n      'Generating recommendations', 'Updating product catalog', 'Processing orders',\n      'Analyzing market trends', 'Optimizing supply chain', 'Managing customer queries',\n      'Forecasting demand', 'Calculating ROI', 'SEO optimization'\n    ];\n\n    const initialExecutions: AgentExecution[] = [];\n    const now = new Date();\n\n    // Generate some running executions (5-8)\n    for (let i = 0; i < 5 + Math.floor(Math.random() * 4); i++) {\n      const agent = agentNames[Math.floor(Math.random() * agentNames.length)];\n      const operation = operations[Math.floor(Math.random() * operations.length)];\n      const startTime = new Date(now.getTime() - Math.random() * 300000); // Started up to 5 minutes ago\n      const duration = (now.getTime() - startTime.getTime()) / 1000;\n      \n      initialExecutions.push({\n        id: `exec-${Date.now()}-${Math.random().toString(36).substr(2, 9)}-${i}`,\n        agentName: agent,\n        operation,\n        status: 'running',\n        startTime,\n        duration,\n        dataProcessed: Math.floor(Math.random() * 50000) + 10000\n      });\n    }\n\n    // Generate some completed executions (15-20)\n    for (let i = 0; i < 15 + Math.floor(Math.random() * 6); i++) {\n      const agent = agentNames[Math.floor(Math.random() * agentNames.length)];\n      const operation = operations[Math.floor(Math.random() * operations.length)];\n      const completedTime = new Date(now.getTime() - Math.random() * 1800000); // Completed up to 30 minutes ago\n      const duration = 3 + Math.random() * 5;\n      \n      initialExecutions.push({\n        id: `exec-${Date.now()}-${Math.random().toString(36).substr(2, 9)}-comp-${i}`,\n        agentName: agent,\n        operation,\n        status: 'completed',\n        startTime: new Date(completedTime.getTime() - duration * 1000),\n        duration,\n        dataProcessed: Math.floor(Math.random() * 50000) + 10000\n      });\n    }\n\n    // Generate some stopped executions (2-4)\n    for (let i = 0; i < 2 + Math.floor(Math.random() * 3); i++) {\n      const agent = agentNames[Math.floor(Math.random() * agentNames.length)];\n      const operation = operations[Math.floor(Math.random() * operations.length)];\n      const stoppedTime = new Date(now.getTime() - Math.random() * 900000); // Stopped up to 15 minutes ago\n      const duration = 1 + Math.random() * 3;\n      \n      initialExecutions.push({\n        id: `exec-${Date.now()}-${Math.random().toString(36).substr(2, 9)}-stop-${i}`,\n        agentName: agent,\n        operation,\n        status: 'stopped',\n        startTime: new Date(stoppedTime.getTime() - duration * 1000),\n        duration,\n        dataProcessed: Math.floor(Math.random() * 30000) + 5000\n      });\n    }\n\n    // Sort by most recent first\n    return initialExecutions.sort((a, b) => b.startTime.getTime() - a.startTime.getTime());\n  });\n\n  const [dataOps, setDataOps] = useState<DataOperation[]>(() => {\n    const agentNames = [\n      'InventoryAgent', 'PricingAgent', 'CustomerServiceAgent', 'RecommendationAgent',\n      'DataAnalysisAgent', 'MarketingAgent', 'FinancialAnalystAgent', 'SEOAgent', 'SupplyChainAgent'\n    ];\n    const tables = ['products', 'orders', 'customers', 'inventory', 'analytics', 'pricing', 'recommendations'];\n    const operationsArray = ['INSERT', 'SELECT', 'UPDATE', 'DELETE'] as const;\n    \n    const initialDataOps: DataOperation[] = [];\n    const now = new Date();\n\n    // Generate 40-60 initial data operations\n    for (let i = 0; i < 40 + Math.floor(Math.random() * 21); i++) {\n      const agent = agentNames[Math.floor(Math.random() * agentNames.length)];\n      const table = tables[Math.floor(Math.random() * tables.length)];\n      const operation = operationsArray[Math.floor(Math.random() * operationsArray.length)];\n      const timestamp = new Date(now.getTime() - Math.random() * 1800000); // Up to 30 minutes ago\n      \n      initialDataOps.push({\n        id: `data-${Date.now()}-${Math.random().toString(36).substr(2, 9)}-${i}`,\n        table,\n        operation,\n        recordsAffected: Math.floor(Math.random() * 25000) + 5000,\n        timestamp,\n        agent\n      });\n    }\n\n    // Sort by most recent first\n    return initialDataOps.sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\n  });\n\n  const [alerts, setAlerts] = useState<MonitoringAlert[]>(() => {\n    const agentNames = [\n      'InventoryAgent', 'PricingAgent', 'CustomerServiceAgent', 'RecommendationAgent',\n      'DataAnalysisAgent', 'MarketingAgent', 'FinancialAnalystAgent', 'SEOAgent', 'SupplyChainAgent'\n    ];\n    \n    const reasons = [\n      'High CPU usage detected',\n      'Memory threshold exceeded',\n      'Unusual data access pattern',\n      'Rate limit approaching',\n      'Anomalous behavior detected',\n      'Security policy violation'\n    ];\n    \n    const severities = ['low', 'medium', 'high'] as const;\n    const initialAlerts: MonitoringAlert[] = [];\n    const now = new Date();\n\n    // Generate 3-7 initial alerts\n    for (let i = 0; i < 3 + Math.floor(Math.random() * 5); i++) {\n      const agent = agentNames[Math.floor(Math.random() * agentNames.length)];\n      const reason = reasons[Math.floor(Math.random() * reasons.length)];\n      const severity = severities[Math.floor(Math.random() * severities.length)];\n      const timestamp = new Date(now.getTime() - Math.random() * 900000); // Up to 15 minutes ago\n      \n      initialAlerts.push({\n        id: `alert-${Date.now()}-${Math.random().toString(36).substr(2, 9)}-${i}`,\n        agentName: agent,\n        reason,\n        timestamp,\n        severity\n      });\n    }\n\n    // Sort by most recent first\n    return initialAlerts.sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\n  });\n\n\n  const agentIcons: { [key: string]: React.ComponentType<any> } = {\n    'InventoryAgent': ShoppingCartIcon,\n    'PricingAgent': CurrencyDollarIcon,\n    'CustomerServiceAgent': ChatBubbleLeftRightIcon,\n    'RecommendationAgent': SparklesIcon,\n    'DataAnalysisAgent': ChartBarIcon,\n    'MarketingAgent': BoltIcon,\n    'FinancialAnalystAgent': CurrencyDollarIcon,\n    'SEOAgent': EyeIcon,\n    'SupplyChainAgent': ArrowTrendingUpIcon,\n  };\n\n\n  const generateAlert = (agentName: string): MonitoringAlert => {\n    const reasons = [\n      'High CPU usage detected',\n      'Memory threshold exceeded',\n      'Unusual data access pattern',\n      'Rate limit approaching',\n      'Anomalous behavior detected',\n      'Security policy violation'\n    ];\n    \n    const severities = ['low', 'medium', 'high'] as const;\n    \n    return {\n      id: `alert-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      agentName,\n      reason: reasons[Math.floor(Math.random() * reasons.length)],\n      timestamp: new Date(),\n      severity: severities[Math.floor(Math.random() * severities.length)]\n    };\n  };\n\n  useEffect(() => {\n    const agentNames = [\n      'InventoryAgent', 'PricingAgent', 'CustomerServiceAgent', 'RecommendationAgent',\n      'DataAnalysisAgent', 'MarketingAgent', 'FinancialAnalystAgent', 'SEOAgent', 'SupplyChainAgent'\n    ];\n\n    const operations = [\n      'Analyzing inventory levels', 'Processing customer data', 'Optimizing pricing strategy',\n      'Generating recommendations', 'Updating product catalog', 'Processing orders',\n      'Analyzing market trends', 'Optimizing supply chain', 'Managing customer queries',\n      'Forecasting demand', 'Calculating ROI', 'SEO optimization'\n    ];\n\n    const tables = ['products', 'orders', 'customers', 'inventory', 'analytics', 'pricing', 'recommendations'];\n\n    const generateExecution = (): AgentExecution => {\n      const agent = agentNames[Math.floor(Math.random() * agentNames.length)];\n      const operation = operations[Math.floor(Math.random() * operations.length)];\n      \n      return {\n        id: `exec-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        agentName: agent,\n        operation,\n        status: 'running',\n        startTime: new Date(),\n        duration: 0,\n        dataProcessed: Math.floor(Math.random() * 50000) + 10000 // 10K-60K records\n      };\n    };\n\n    const generateDataOperation = (agent: string): DataOperation => {\n      const operationsArray = ['INSERT', 'SELECT', 'UPDATE', 'DELETE'] as const;\n      const table = tables[Math.floor(Math.random() * tables.length)];\n      const operation = operationsArray[Math.floor(Math.random() * operationsArray.length)];\n      \n      return {\n        id: `data-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        table,\n        operation,\n        recordsAffected: Math.floor(Math.random() * 25000) + 5000, // 5K-30K records\n        timestamp: new Date(),\n        agent\n      };\n    };\n\n    const interval = setInterval(() => {\n      // Add new executions much more frequently (every 300ms)\n      if (Math.random() < 0.8) {\n        const newExecution = generateExecution();\n        setExecutions(prev => [newExecution, ...prev.slice(0, 49)]); // Keep last 50\n      }\n\n      // Update existing executions\n      setExecutions(prev => prev.map(exec => {\n        if (exec.status === 'running') {\n          // Calculate actual duration for pre-existing executions\n          const currentTime = new Date();\n          const actualDuration = (currentTime.getTime() - exec.startTime.getTime()) / 1000;\n          const newDuration = actualDuration;\n          \n          // 8% chance of being stopped by monitoring (more frequent)\n          if (Math.random() < 0.08) {\n            const alert = generateAlert(exec.agentName);\n            setAlerts(prevAlerts => [alert, ...prevAlerts.slice(0, 14)]); // Keep last 15\n            return { ...exec, status: 'stopped', duration: newDuration };\n          }\n          \n          // Complete after 3-8 seconds (much faster)\n          if (newDuration > 3 + Math.random() * 5) {\n            // Generate more data operations when completing\n            const numOps = Math.floor(Math.random() * 8) + 3; // 3-10 operations\n            for (let i = 0; i < numOps; i++) {\n              setTimeout(() => {\n                const dataOp = generateDataOperation(exec.agentName);\n                setDataOps(prev => [dataOp, ...prev.slice(0, 99)]); // Keep last 100\n              }, i * 50); // Faster generation\n            }\n            \n            return { ...exec, status: 'completed', duration: newDuration };\n          }\n          \n          return { ...exec, duration: newDuration };\n        }\n        return exec;\n      }));\n    }, 300); // Much faster updates (300ms instead of 1000ms)\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const runningExecutions = executions.filter(e => e.status === 'running');\n  const completedExecutions = executions.filter(e => e.status === 'completed');\n  const stoppedExecutions = executions.filter(e => e.status === 'stopped');\n\n  const recentDataOps = dataOps.slice(0, 10);\n  const recentAlerts = alerts.slice(0, 5);\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      {/* Header */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <div className=\"flex items-center space-x-3 mb-4\">\n              <ComputerDesktopIcon className=\"h-8 w-8 text-primary-600\" />\n              <h1 className=\"text-3xl font-bold text-gray-900\">Agent Monitoring Dashboard</h1>\n            </div>\n            <p className=\"text-gray-600\">\n              Real-time monitoring of AI agent executions and system operations\n            </p>\n          </div>\n          \n        </div>\n      </div>\n\n      {/* Stats Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n        <div className=\"card\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Running</p>\n              <p className=\"text-3xl font-bold text-green-600\">{runningExecutions.length}</p>\n            </div>\n            <ArrowPathIcon className=\"h-8 w-8 text-green-600 animate-spin\" />\n          </div>\n        </div>\n        \n        <div className=\"card\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Completed</p>\n              <p className=\"text-3xl font-bold text-blue-600\">{completedExecutions.length}</p>\n            </div>\n            <CheckCircleIcon className=\"h-8 w-8 text-blue-600\" />\n          </div>\n        </div>\n        \n        <div className=\"card\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Stopped</p>\n              <p className=\"text-3xl font-bold text-red-600\">{stoppedExecutions.length}</p>\n            </div>\n            <XCircleIcon className=\"h-8 w-8 text-red-600\" />\n          </div>\n        </div>\n        \n        <div className=\"card\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Data Ops</p>\n              <p className=\"text-3xl font-bold text-purple-600\">{dataOps.length}</p>\n            </div>\n            <CircleStackIcon className=\"h-8 w-8 text-purple-600\" />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        {/* Active Executions */}\n        <div className=\"card\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Active Executions</h3>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n              <span className=\"text-sm text-gray-500\">Live</span>\n            </div>\n          </div>\n          \n          <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n            {runningExecutions.length === 0 ? (\n              <p className=\"text-gray-500 text-center py-8\">No active executions</p>\n            ) : (\n              runningExecutions.map((exec) => {\n                const IconComponent = agentIcons[exec.agentName] || CpuChipIcon;\n                return (\n                  <div key={exec.id} className=\"flex items-center justify-between p-3 bg-green-50 rounded-lg border border-green-200\">\n                    <div className=\"flex items-center space-x-3\">\n                      <IconComponent className=\"h-5 w-5 text-green-600\" />\n                      <div>\n                        <p className=\"font-medium text-gray-900\">{exec.agentName}</p>\n                        <p className=\"text-sm text-gray-600\">{exec.operation}</p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"flex items-center space-x-2\">\n                        <ArrowPathIcon className=\"h-4 w-4 text-green-600 animate-spin\" />\n                        <span className=\"text-sm font-medium text-green-600\">{exec.duration.toFixed(1)}s</span>\n                      </div>\n                      <p className=\"text-xs text-gray-500\">{exec.dataProcessed.toLocaleString()} records</p>\n                    </div>\n                  </div>\n                );\n              })\n            )}\n          </div>\n        </div>\n\n        {/* Recent Data Operations */}\n        <div className=\"card\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Database Operations</h3>\n            <CircleStackIcon className=\"h-5 w-5 text-gray-400\" />\n          </div>\n          \n          <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n            {recentDataOps.length === 0 ? (\n              <p className=\"text-gray-500 text-center py-8\">No recent operations</p>\n            ) : (\n              recentDataOps.map((op) => (\n                <div key={op.id} className=\"flex items-center justify-between p-2 hover:bg-gray-50 rounded\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className={`px-2 py-1 rounded text-xs font-medium ${\n                      op.operation === 'INSERT' ? 'bg-green-100 text-green-800' :\n                      op.operation === 'SELECT' ? 'bg-blue-100 text-blue-800' :\n                      op.operation === 'UPDATE' ? 'bg-yellow-100 text-yellow-800' :\n                      'bg-red-100 text-red-800'\n                    }`}>\n                      {op.operation}\n                    </div>\n                    <span className=\"text-sm font-medium\">{op.table}</span>\n                    <span className=\"text-xs text-gray-500\">by {op.agent}</span>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-sm font-medium\">{op.recordsAffected.toLocaleString()}</p>\n                    <p className=\"text-xs text-gray-500\">\n                      {op.timestamp.toLocaleTimeString()}\n                    </p>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Monitoring Alerts and Recent Executions */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mt-8\">\n        {/* Monitoring Alerts */}\n        <div className=\"card\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Monitoring Alerts</h3>\n            <ShieldCheckIcon className=\"h-5 w-5 text-gray-400\" />\n          </div>\n          \n          <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n            {recentAlerts.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <CheckCircleIcon className=\"h-12 w-12 text-green-400 mx-auto mb-2\" />\n                <p className=\"text-green-600 font-medium\">All systems operating normally</p>\n              </div>\n            ) : (\n              recentAlerts.map((alert) => (\n                <div key={alert.id} className={`p-3 rounded-lg border-l-4 ${\n                  alert.severity === 'high' ? 'bg-red-50 border-red-400' :\n                  alert.severity === 'medium' ? 'bg-yellow-50 border-yellow-400' :\n                  'bg-blue-50 border-blue-400'\n                }`}>\n                  <div className=\"flex items-start justify-between\">\n                    <div>\n                      <div className=\"flex items-center space-x-2\">\n                        <ExclamationTriangleIcon className={`h-4 w-4 ${\n                          alert.severity === 'high' ? 'text-red-600' :\n                          alert.severity === 'medium' ? 'text-yellow-600' :\n                          'text-blue-600'\n                        }`} />\n                        <span className=\"font-medium text-gray-900\">{alert.agentName}</span>\n                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                          alert.severity === 'high' ? 'bg-red-100 text-red-800' :\n                          alert.severity === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                          'bg-blue-100 text-blue-800'\n                        }`}>\n                          {alert.severity.toUpperCase()}\n                        </span>\n                      </div>\n                      <p className=\"text-sm text-gray-600 mt-1\">{alert.reason}</p>\n                    </div>\n                    <span className=\"text-xs text-gray-500\">\n                      {alert.timestamp.toLocaleTimeString()}\n                    </span>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Execution History */}\n        <div className=\"card\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Recent Executions</h3>\n            <ClockIcon className=\"h-5 w-5 text-gray-400\" />\n          </div>\n          \n          <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n            {executions.slice(0, 10).map((exec) => {\n              const IconComponent = agentIcons[exec.agentName] || CpuChipIcon;\n              return (\n                <div key={exec.id} className=\"flex items-center justify-between p-2 hover:bg-gray-50 rounded\">\n                  <div className=\"flex items-center space-x-3\">\n                    <IconComponent className=\"h-4 w-4 text-gray-400\" />\n                    <div>\n                      <p className=\"text-sm font-medium\">{exec.agentName}</p>\n                      <p className=\"text-xs text-gray-500\">{exec.operation}</p>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <div className=\"flex items-center space-x-2\">\n                      {exec.status === 'running' && (\n                        <ArrowPathIcon className=\"h-3 w-3 text-green-600 animate-spin\" />\n                      )}\n                      {exec.status === 'completed' && (\n                        <CheckCircleIcon className=\"h-3 w-3 text-green-600\" />\n                      )}\n                      {exec.status === 'stopped' && (\n                        <XCircleIcon className=\"h-3 w-3 text-red-600\" />\n                      )}\n                      <span className={`text-xs font-medium ${\n                        exec.status === 'running' ? 'text-green-600' :\n                        exec.status === 'completed' ? 'text-blue-600' :\n                        'text-red-600'\n                      }`}>\n                        {exec.status}\n                      </span>\n                    </div>\n                    <p className=\"text-xs text-gray-500\">{exec.duration.toFixed(1)}s</p>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminMonitoringDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}