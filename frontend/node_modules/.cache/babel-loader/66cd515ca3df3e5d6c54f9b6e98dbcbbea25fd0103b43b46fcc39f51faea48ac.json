{"ast":null,"code":"import{create}from'zustand';import{cartService}from'../services/cartService';import toast from'react-hot-toast';export const useCartStore=create((set,get)=>({items:[],isLoading:false,totalItems:0,totalAmount:0,fetchCart:async()=>{set({isLoading:true});try{const items=await cartService.getCart();const totalItems=items.reduce((sum,item)=>sum+item.quantity,0);const totalAmount=items.reduce((sum,item)=>sum+item.total_price,0);set({items,totalItems,totalAmount,isLoading:false});}catch(error){set({isLoading:false});console.error('Failed to fetch cart:',error);}},addToCart:async(productId,quantity)=>{try{await cartService.addToCart(productId,quantity);await get().fetchCart();// Refresh cart\ntoast.success('Added to cart!');}catch(error){toast.error(error.message||'Failed to add to cart');}},updateQuantity:async(itemId,quantity)=>{try{if(quantity<=0){await get().removeItem(itemId);return;}await cartService.updateCartItem(itemId,quantity);await get().fetchCart();// Refresh cart\n}catch(error){toast.error(error.message||'Failed to update quantity');}},removeItem:async itemId=>{try{await cartService.removeFromCart(itemId);await get().fetchCart();// Refresh cart\ntoast.success('Item removed from cart');}catch(error){toast.error(error.message||'Failed to remove item');}},clearCart:async()=>{try{await cartService.clearCart();set({items:[],totalItems:0,totalAmount:0});toast.success('Cart cleared');}catch(error){toast.error(error.message||'Failed to clear cart');}},getCartSummary:async()=>{try{const summary=await cartService.getCartSummary();set({totalItems:summary.total_items,totalAmount:summary.total_amount});}catch(error){console.error('Failed to get cart summary:',error);}}}));","map":{"version":3,"names":["create","cartService","toast","useCartStore","set","get","items","isLoading","totalItems","totalAmount","fetchCart","getCart","reduce","sum","item","quantity","total_price","error","console","addToCart","productId","success","message","updateQuantity","itemId","removeItem","updateCartItem","removeFromCart","clearCart","getCartSummary","summary","total_items","total_amount"],"sources":["/Users/billscolinos/Documents/companyOS/frontend/src/stores/cartStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport { cartService } from '../services/cartService';\r\nimport { CartItem } from '../types';\r\nimport toast from 'react-hot-toast';\r\n\r\ninterface CartState {\r\n  items: CartItem[];\r\n  isLoading: boolean;\r\n  totalItems: number;\r\n  totalAmount: number;\r\n  fetchCart: () => Promise<void>;\r\n  addToCart: (productId: number, quantity: number) => Promise<void>;\r\n  updateQuantity: (itemId: number, quantity: number) => Promise<void>;\r\n  removeItem: (itemId: number) => Promise<void>;\r\n  clearCart: () => Promise<void>;\r\n  getCartSummary: () => Promise<void>;\r\n}\r\n\r\nexport const useCartStore = create<CartState>((set, get) => ({\r\n  items: [],\r\n  isLoading: false,\r\n  totalItems: 0,\r\n  totalAmount: 0,\r\n\r\n  fetchCart: async () => {\r\n    set({ isLoading: true });\r\n    try {\r\n      const items = await cartService.getCart();\r\n      const totalItems = items.reduce((sum, item) => sum + item.quantity, 0);\r\n      const totalAmount = items.reduce((sum, item) => sum + item.total_price, 0);\r\n      \r\n      set({ \r\n        items, \r\n        totalItems, \r\n        totalAmount, \r\n        isLoading: false \r\n      });\r\n    } catch (error: any) {\r\n      set({ isLoading: false });\r\n      console.error('Failed to fetch cart:', error);\r\n    }\r\n  },\r\n\r\n  addToCart: async (productId: number, quantity: number) => {\r\n    try {\r\n      await cartService.addToCart(productId, quantity);\r\n      await get().fetchCart(); // Refresh cart\r\n      toast.success('Added to cart!');\r\n    } catch (error: any) {\r\n      toast.error(error.message || 'Failed to add to cart');\r\n    }\r\n  },\r\n\r\n  updateQuantity: async (itemId: number, quantity: number) => {\r\n    try {\r\n      if (quantity <= 0) {\r\n        await get().removeItem(itemId);\r\n        return;\r\n      }\r\n      \r\n      await cartService.updateCartItem(itemId, quantity);\r\n      await get().fetchCart(); // Refresh cart\r\n    } catch (error: any) {\r\n      toast.error(error.message || 'Failed to update quantity');\r\n    }\r\n  },\r\n\r\n  removeItem: async (itemId: number) => {\r\n    try {\r\n      await cartService.removeFromCart(itemId);\r\n      await get().fetchCart(); // Refresh cart\r\n      toast.success('Item removed from cart');\r\n    } catch (error: any) {\r\n      toast.error(error.message || 'Failed to remove item');\r\n    }\r\n  },\r\n\r\n  clearCart: async () => {\r\n    try {\r\n      await cartService.clearCart();\r\n      set({ items: [], totalItems: 0, totalAmount: 0 });\r\n      toast.success('Cart cleared');\r\n    } catch (error: any) {\r\n      toast.error(error.message || 'Failed to clear cart');\r\n    }\r\n  },\r\n\r\n  getCartSummary: async () => {\r\n    try {\r\n      const summary = await cartService.getCartSummary();\r\n      set({ \r\n        totalItems: summary.total_items,\r\n        totalAmount: summary.total_amount\r\n      });\r\n    } catch (error: any) {\r\n      console.error('Failed to get cart summary:', error);\r\n    }\r\n  },\r\n}));\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}