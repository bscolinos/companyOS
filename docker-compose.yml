version: '3.8'

services:
  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-commerce-backend
    ports:
      - "8000:8000"
    environment:
      - SINGLESTORE_HOST=${SINGLESTORE_HOST}
      - SINGLESTORE_PORT=${SINGLESTORE_PORT:-3306}
      - SINGLESTORE_USER=${SINGLESTORE_USER}
      - SINGLESTORE_PASSWORD=${SINGLESTORE_PASSWORD}
      - SINGLESTORE_DATABASE=${SINGLESTORE_DATABASE:-ecommerce_ai}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ENABLE_AUTO_PRICING=true
      - ENABLE_AUTO_INVENTORY=true
      - ENABLE_AUTO_RECOMMENDATIONS=true
    volumes:
      - ./backend:/app
    networks:
      - ai-commerce-network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:8000
    container_name: ai-commerce-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - ai-commerce-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: ai-commerce-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - ai-commerce-network
    restart: unless-stopped
    profiles:
      - production

networks:
  ai-commerce-network:
    driver: bridge
